name: Build and Push Docker Images to GHCR

on:
  push:
    branches:
      - main
    tags:
      - 'v*.*.*'
  pull_request: # Also build on PRs to check Dockerfiles, but don't push
    branches:
      - main

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }} # Format: owner/repository-name

jobs:
  build-and-push-cpu:
    name: Build CPU Image
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write # Needed to push to GHCR

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to GitHub Container Registry
        if: github.event_name != 'pull_request' # Don't login on PRs
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract metadata (tags, labels) for Docker
        id: meta_cpu
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
          # For PRs, create a unique tag. For pushes to main/tags, create proper tags.
          tags: |
            type=ref,event=branch,suffix=-cpu
            type=ref,event=tag,suffix=-cpu
            type=sha,prefix=pr-,suffix=-cpu,event=pr
            type=raw,value=latest-cpu,enable=${{ github.ref == format('refs/heads/{0}', 'main') }}

      - name: Build and push CPU Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./Dockerfile.cpu
          push: ${{ github.event_name != 'pull_request' }} # Only push if not a PR
          tags: ${{ steps.meta_cpu.outputs.tags }}
          labels: ${{ steps.meta_cpu.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max


  build-and-push-gpu:
    name: Build GPU Image
    runs-on: ubuntu-latest # GitHub-hosted runners do not have GPUs.
                          # This builds the image structure; runtime requires a GPU environment.
    permissions:
      contents: read
      packages: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to GitHub Container Registry
        if: github.event_name != 'pull_request'
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract metadata (tags, labels) for Docker
        id: meta_gpu
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
          tags: |
            type=ref,event=branch,suffix=-gpu
            type=ref,event=tag,suffix=-gpu
            type=sha,prefix=pr-,suffix=-gpu,event=pr
            type=raw,value=latest-gpu,enable=${{ github.ref == format('refs/heads/{0}', 'main') }}

      - name: Build and push GPU Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./Dockerfile.gpu
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ steps.meta_gpu.outputs.tags }}
          labels: ${{ steps.meta_gpu.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max